<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.ydc.dao.cgj.order.OrderLogisticsDao">
    <resultMap id="BaseResultMap" type="com.ydc.model.cgj.OrderLogistics">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="order_commodity_id" property="orderCommodityId" jdbcType="INTEGER"/>
        <result column="logistics_company" property="logisticsCompany" jdbcType="VARCHAR"/>
        <result column="logistics_order" property="logisticsOrder" jdbcType="VARCHAR"/>
        <result column="delivery_time" property="deliveryTime" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, order_commodity_id, logistics_company,
        logistics_order, delivery_time, create_time, update_time, update_by
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_order_logistics
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from t_order_logistics
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.ydc.model.cgj.OrderLogistics" useGeneratedKeys="true" keyProperty="id">
        insert into t_order_logistics (order_commodity_id, logistics_company, logistics_order,
        delivery_time, create_time, update_time,
        update_by)
        values (#{orderCommodityId,jdbcType=INTEGER}, #{logisticsCompany,jdbcType=VARCHAR},
        #{logisticsOrder,jdbcType=VARCHAR},
        #{deliveryTime,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
        #{updateBy,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.ydc.model.cgj.OrderLogistics" useGeneratedKeys="true" keyProperty="id">
        insert into t_order_logistics
        <trim prefix="(" suffix=")" suffixOverrides=",">
            order_commodity_id,
            logistics_company,
            logistics_order,
            delivery_time,
            create_time,
            update_time,
            update_by,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{orderCommodityId,jdbcType=INTEGER},
            #{logisticsCompany,jdbcType=VARCHAR},
            #{logisticsOrder,jdbcType=VARCHAR},
            #{deliveryTime,jdbcType=VARCHAR},
            #{createTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP},
            #{updateBy,jdbcType=INTEGER},
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ydc.model.cgj.OrderLogistics">
        update t_order_logistics
        <set>
            <if test="orderCommodityId != null">
                order_commodity_id = #{orderCommodityId,jdbcType=INTEGER},
            </if>
            <if test="logisticsCompany != null">
                logistics_company = #{logisticsCompany,jdbcType=VARCHAR},
            </if>
            <if test="logisticsOrder != null">
                logistics_order = #{logisticsOrder,jdbcType=VARCHAR},
            </if>
            <if test="deliveryTime != null">
                delivery_time = #{deliveryTime,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ydc.model.cgj.OrderLogistics">
        update t_order_logistics
        set order_commodity_id = #{orderCommodityId,jdbcType=INTEGER},
        logistics_company = #{logisticsCompany,jdbcType=VARCHAR},
        logistics_order = #{logisticsOrder,jdbcType=VARCHAR},
        delivery_time = #{deliveryTime,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        update_by = #{updateBy,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <insert id="insertBySonOrderId">
        INSERT INTO
        t_order_logistics(order_commodity_id,logistics_company,logistics_order,delivery_time,create_time,update_time,update_by)
        SELECT
        toc.id,#{logisticsCompany,jdbcType=VARCHAR},#{logisticsOrder,jdbcType=VARCHAR},NOW(),NOW(),NOW(),#{updateBy,jdbcType=INTEGER}
        FROM t_order_commodity toc WHERE toc.order_id = #{orderId,jdbcType=INTEGER};

        UPDATE t_order_commodity toc SET toc.logistics_status = 1 WHERE toc.order_id = #{orderId,jdbcType=INTEGER};

        UPDATE t_order tor SET tor.logistics_status = 1, tor.status = 3 WHERE tor.id = #{orderId,jdbcType=INTEGER};
    </insert>

    <insert id="insertByOrderCommodityIds">
        INSERT INTO
        t_order_logistics(order_commodity_id,logistics_company,logistics_order,delivery_time,create_time,update_time,update_by)
        SELECT
        toc.id,#{logisticsCompany,jdbcType=VARCHAR},#{logisticsOrder,jdbcType=VARCHAR},NOW(),NOW(),NOW(),#{updateBy,jdbcType=INTEGER}
        FROM t_order_commodity toc WHERE toc.id IN(${orderCommodityIds});

        UPDATE t_order_commodity toc SET toc.logistics_status = 1 WHERE toc.id IN(${orderCommodityIds});

        UPDATE t_order tor
        SET tor.logistics_status = IF((SELECT COUNT(1)
                                        FROM t_order_commodity toc
                                        WHERE toc.order_id = (SELECT t.order_id FROM t_order_commodity t WHERE t.id IN(${orderCommodityIds}) LIMIT 1)
                                        AND toc.logistics_status = 0) > 0, 2, 1),
            tor.status = IF((SELECT COUNT(1)
                                FROM t_order_commodity toc
                                WHERE toc.order_id = (SELECT t.order_id FROM t_order_commodity t WHERE t.id IN(${orderCommodityIds}) LIMIT 1)
                                AND toc.logistics_status = 0) > 0, tor.status, 3)
        WHERE tor.id = (SELECT toc.order_id FROM t_order_commodity toc WHERE toc.id IN(${orderCommodityIds}) LIMIT 1);
    </insert>

    <select id="getOrderLogistics" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_order_logistics
        WHERE order_commodity_id IN (SELECT id FROM t_order_commodity WHERE order_id = #{orderId,jdbcType=INTEGER});
    </select>

    <select id="getOrderLogisticsTask"  resultType="java.util.Map">
        SELECT
        tos.order_id orderId,
        DATE_FORMAT(tol.delivery_time,'%Y-%m-%d') AS deliveryTime
        FROM t_order_logistics tol
        LEFT JOIN t_order_commodity toc ON toc.id = tol.order_commodity_id
        LEFT JOIN t_order tos ON tos.id = toc.order_id
        WHERE tos.logistics_status = 1 AND tos.status = 3
        GROUP BY tol.order_commodity_id
        ORDER BY tol.delivery_time DESC;
    </select>

    <update id="batchUpdateOrderLogistics" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";">
            update t_order tos
            set
                tos.status = 4,
                tos.update_by = 1,
                tos.update_time = NOW()
            where tos.id = #{item.orderId,jdbcType=INTEGER};
        </foreach>
    </update>
</mapper>