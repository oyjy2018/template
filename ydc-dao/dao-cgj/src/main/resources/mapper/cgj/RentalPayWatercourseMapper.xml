<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.ydc.dao.cgj.rental.RentalPayWatercourseDao" >
  <resultMap id="BaseResultMap" type="com.ydc.model.cgj.rental.RentalPayWatercourse" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="settlement_id" property="settlementId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="third_parth_order_no" property="thirdParthOrderNo" jdbcType="VARCHAR" />
    <result column="oneself_serial_number" property="oneselfSerialNumber" jdbcType="VARCHAR" />
    <result column="third_party_serial_number" property="thirdPartySerialNumber" jdbcType="VARCHAR" />
    <result column="payment_mode" property="paymentMode" jdbcType="TINYINT" />
    <result column="payable_amount" property="payableAmount" jdbcType="DECIMAL" />
    <result column="actual_amount" property="actualAmount" jdbcType="DECIMAL" />
    <result column="deposit_type" property="depositType" jdbcType="TINYINT" />
    <result column="operation_user_id" property="operationUserId" jdbcType="INTEGER" />
    <result column="operation_user_name" property="operationUserName" jdbcType="VARCHAR" />
    <result column="operation_time" property="operationTime" jdbcType="TIMESTAMP" />
    <result column="payee_user_name" property="payeeUserName" jdbcType="VARCHAR" />
    <result column="payee_account" property="payeeAccount" jdbcType="VARCHAR" />
    <result column="payment_user_name" property="paymentUserName" jdbcType="VARCHAR" />
    <result column="payment_account" property="paymentAccount" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="delete_status" property="deleteStatus" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, member_id, order_id, settlement_id, order_no, third_parth_order_no, oneself_serial_number,
    third_party_serial_number, payment_mode, payable_amount, actual_amount, deposit_type,
    operation_user_id, operation_user_name, operation_time, payee_user_name, payee_account,
    payment_user_name, payment_account, remark, delete_status, create_time, create_by,
    update_time, update_by
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_rental_pay_watercourse
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_rental_pay_watercourse
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ydc.model.cgj.rental.RentalPayWatercourse" useGeneratedKeys="true" keyProperty="id" >
    insert into t_rental_pay_watercourse (member_id, order_id, settlement_id,
    order_no, third_parth_order_no, oneself_serial_number,
    third_party_serial_number, payment_mode, payable_amount,
    actual_amount, deposit_type, operation_user_id,
    operation_user_name, operation_time, payee_user_name,
    payee_account, payment_user_name, payment_account,
    remark, delete_status, create_time,
    create_by, update_time, update_by
    )
    values (#{memberId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{settlementId,jdbcType=INTEGER},
    #{orderNo,jdbcType=VARCHAR}, #{thirdParthOrderNo,jdbcType=VARCHAR}, #{oneselfSerialNumber,jdbcType=VARCHAR},
    #{thirdPartySerialNumber,jdbcType=VARCHAR}, #{paymentMode,jdbcType=TINYINT}, #{payableAmount,jdbcType=DECIMAL},
    #{actualAmount,jdbcType=DECIMAL}, #{depositType,jdbcType=TINYINT}, #{operationUserId,jdbcType=INTEGER},
    #{operationUserName,jdbcType=VARCHAR}, #{operationTime,jdbcType=TIMESTAMP}, #{payeeUserName,jdbcType=VARCHAR},
    #{payeeAccount,jdbcType=VARCHAR}, #{paymentUserName,jdbcType=VARCHAR}, #{paymentAccount,jdbcType=VARCHAR},
    #{remark,jdbcType=VARCHAR}, #{deleteStatus,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP},
    #{createBy,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.ydc.model.cgj.rental.RentalPayWatercourse" useGeneratedKeys="true" keyProperty="id" >
    insert into t_rental_pay_watercourse
    <trim prefix="(" suffix=")" suffixOverrides="," >
      member_id,
      order_id,
      settlement_id,
      order_no,
      third_parth_order_no,
      oneself_serial_number,
      third_party_serial_number,
      payment_mode,
      payable_amount,
      actual_amount,
      deposit_type,
      operation_user_id,
      operation_user_name,
      operation_time,
      payee_user_name,
      payee_account,
      payment_user_name,
      payment_account,
      remark,
      delete_status,
      create_time,
      create_by,
      update_time,
      update_by,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{memberId,jdbcType=INTEGER},
      #{orderId,jdbcType=INTEGER},
      #{settlementId,jdbcType=INTEGER},
      #{orderNo,jdbcType=VARCHAR},
      #{thirdParthOrderNo,jdbcType=VARCHAR},
      #{oneselfSerialNumber,jdbcType=VARCHAR},
      #{thirdPartySerialNumber,jdbcType=VARCHAR},
      #{paymentMode,jdbcType=TINYINT},
      #{payableAmount,jdbcType=DECIMAL},
      #{actualAmount,jdbcType=DECIMAL},
      #{depositType,jdbcType=TINYINT},
      #{operationUserId,jdbcType=INTEGER},
      #{operationUserName,jdbcType=VARCHAR},
      #{operationTime,jdbcType=TIMESTAMP},
      #{payeeUserName,jdbcType=VARCHAR},
      #{payeeAccount,jdbcType=VARCHAR},
      #{paymentUserName,jdbcType=VARCHAR},
      #{paymentAccount,jdbcType=VARCHAR},
      #{remark,jdbcType=VARCHAR},
      #{deleteStatus,jdbcType=TINYINT},
      #{createTime,jdbcType=TIMESTAMP},
      #{createBy,jdbcType=INTEGER},
      #{updateTime,jdbcType=TIMESTAMP},
      #{updateBy,jdbcType=INTEGER},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ydc.model.cgj.rental.RentalPayWatercourse" >
    update t_rental_pay_watercourse
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="settlementId != null" >
        settlement_id = #{settlementId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="thirdParthOrderNo != null" >
        third_parth_order_no = #{thirdParthOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="oneselfSerialNumber != null" >
        oneself_serial_number = #{oneselfSerialNumber,jdbcType=VARCHAR},
      </if>
      <if test="thirdPartySerialNumber != null" >
        third_party_serial_number = #{thirdPartySerialNumber,jdbcType=VARCHAR},
      </if>
      <if test="paymentMode != null" >
        payment_mode = #{paymentMode,jdbcType=TINYINT},
      </if>
      <if test="payableAmount != null" >
        payable_amount = #{payableAmount,jdbcType=DECIMAL},
      </if>
      <if test="actualAmount != null" >
        actual_amount = #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="depositType != null" >
        deposit_type = #{depositType,jdbcType=TINYINT},
      </if>
      <if test="operationUserId != null" >
        operation_user_id = #{operationUserId,jdbcType=INTEGER},
      </if>
      <if test="operationUserName != null" >
        operation_user_name = #{operationUserName,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null" >
        operation_time = #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payeeUserName != null" >
        payee_user_name = #{payeeUserName,jdbcType=VARCHAR},
      </if>
      <if test="payeeAccount != null" >
        payee_account = #{payeeAccount,jdbcType=VARCHAR},
      </if>
      <if test="paymentUserName != null" >
        payment_user_name = #{paymentUserName,jdbcType=VARCHAR},
      </if>
      <if test="paymentAccount != null" >
        payment_account = #{paymentAccount,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deleteStatus != null" >
        delete_status = #{deleteStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ydc.model.cgj.rental.RentalPayWatercourse" >
    update t_rental_pay_watercourse
    set member_id = #{memberId,jdbcType=INTEGER},
    order_id = #{orderId,jdbcType=INTEGER},
    settlement_id = #{settlementId,jdbcType=INTEGER},
    order_no = #{orderNo,jdbcType=VARCHAR},
    third_parth_order_no = #{thirdParthOrderNo,jdbcType=VARCHAR},
    oneself_serial_number = #{oneselfSerialNumber,jdbcType=VARCHAR},
    third_party_serial_number = #{thirdPartySerialNumber,jdbcType=VARCHAR},
    payment_mode = #{paymentMode,jdbcType=TINYINT},
    payable_amount = #{payableAmount,jdbcType=DECIMAL},
    actual_amount = #{actualAmount,jdbcType=DECIMAL},
    deposit_type = #{depositType,jdbcType=TINYINT},
    operation_user_id = #{operationUserId,jdbcType=INTEGER},
    operation_user_name = #{operationUserName,jdbcType=VARCHAR},
    operation_time = #{operationTime,jdbcType=TIMESTAMP},
    payee_user_name = #{payeeUserName,jdbcType=VARCHAR},
    payee_account = #{payeeAccount,jdbcType=VARCHAR},
    payment_user_name = #{paymentUserName,jdbcType=VARCHAR},
    payment_account = #{paymentAccount,jdbcType=VARCHAR},
    remark = #{remark,jdbcType=VARCHAR},
    delete_status = #{deleteStatus,jdbcType=TINYINT},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    create_by = #{createBy,jdbcType=INTEGER},
    update_time = #{updateTime,jdbcType=TIMESTAMP},
    update_by = #{updateBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getPayWatercourseByOrderId" resultType="com.ydc.commom.view.vo.cgj.rental.RentalPayWatercourseVO">
    select
    DATE_FORMAT(operation_time,'%Y-%m-%d %H:%i:%s') operationTime,
    operation_user_name operationUserName,
    actual_amount actualAmount
    from t_rental_pay_watercourse
    where order_id = #{rentalPayWatercourseDTO.orderId,jdbcType=INTEGER}
    <if test="rentalPayWatercourseDTO.depositType != null and rentalPayWatercourseDTO.depositType != ''">
      AND deposit_type = #{rentalPayWatercourseDTO.depositType,jdbcType=TINYINT}
    </if>
    AND delete_status = 1
  </select>

  <select id="getPayWatercourseByDepositTypes" resultType="com.ydc.commom.view.vo.cgj.rental.RentalPayWatercourseVO">
    select
    DATE_FORMAT(operation_time,'%Y-%m-%d %H:%i:%s') operationTime,
    operation_user_name operationUserName,
    actual_amount actualAmount
    from t_rental_pay_watercourse
    where order_id = #{orderId,jdbcType=INTEGER}
    <if test="depositTypes != null and depositTypes != ''">
      AND deposit_type IN( ${depositTypes})
    </if>
    AND delete_status = 1
  </select>


  <select id="selectByRentalPayWatercourse" resultMap="BaseResultMap" parameterType="com.ydc.model.cgj.rental.RentalPayWatercourse" >
    select
    <include refid="Base_Column_List" />
    from t_rental_pay_watercourse
    <where>
      <if test="memberId != null" >
        and member_id = #{memberId,jdbcType=INTEGER}
      </if>
      <if test="orderId != null" >
        and  order_id = #{orderId,jdbcType=INTEGER}
      </if>
      <if test="settlementId != null" >
        and settlement_id = #{settlementId,jdbcType=INTEGER}
      </if>
      <if test="orderNo != null" >
        and order_no = #{orderNo,jdbcType=VARCHAR}
      </if>
      <if test="thirdParthOrderNo != null" >
        and third_parth_order_no = #{thirdParthOrderNo,jdbcType=VARCHAR}
      </if>
      <if test="oneselfSerialNumber != null" >
        and oneself_serial_number = #{oneselfSerialNumber,jdbcType=VARCHAR}
      </if>
      <if test="thirdPartySerialNumber != null" >
        and  third_party_serial_number = #{thirdPartySerialNumber,jdbcType=VARCHAR}
      </if>
      <if test="paymentMode != null" >
        and payment_mode = #{paymentMode,jdbcType=TINYINT}
      </if>
      <if test="payableAmount != null" >
        and payable_amount = #{payableAmount,jdbcType=DECIMAL}
      </if>
      <if test="actualAmount != null" >
        and actual_amount = #{actualAmount,jdbcType=DECIMAL}
      </if>
      <if test="depositType != null" >
        and  deposit_type = #{depositType,jdbcType=TINYINT}
      </if>
      <if test="operationUserId != null" >
        and operation_user_id = #{operationUserId,jdbcType=INTEGER}
      </if>
      <if test="operationUserName != null" >
        and operation_user_name = #{operationUserName,jdbcType=VARCHAR}
      </if>
      <if test="operationTime != null" >
        and operation_time = #{operationTime,jdbcType=TIMESTAMP}
      </if>
      <if test="payeeUserName != null" >
        and payee_user_name = #{payeeUserName,jdbcType=VARCHAR}
      </if>
      <if test="payeeAccount != null" >
        and  payee_account = #{payeeAccount,jdbcType=VARCHAR}
      </if>
      <if test="paymentUserName != null" >
        and  payment_user_name = #{paymentUserName,jdbcType=VARCHAR}
      </if>
      <if test="paymentAccount != null" >
        payment_account = #{paymentAccount,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        and remark = #{remark,jdbcType=VARCHAR}
      </if>
      <if test="deleteStatus != null" >
        and delete_status = #{deleteStatus,jdbcType=TINYINT}
      </if>
      <if test="createTime != null" >
        and  create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="createBy != null" >
        and create_by = #{createBy,jdbcType=INTEGER}
      </if>
      <if test="updateTime != null" >
        and  update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateBy != null" >
      and   update_by = #{updateBy,jdbcType=INTEGER}
      </if>
    </where>
  </select>


    <insert id="batchInsert" parameterType="java.util.List">
        insert into t_rental_pay_watercourse (member_id, order_id, settlement_id,
        order_no, third_parth_order_no, oneself_serial_number,
        third_party_serial_number, payment_mode, payable_amount,
        actual_amount, deposit_type, operation_user_id,
        operation_user_name, operation_time, payee_user_name,
        payee_account, payment_user_name, payment_account,
        remark, delete_status, create_time,
        create_by
        )
        values
        <foreach collection="list" item="vm" index="index" separator=",">
        (#{vm.memberId,jdbcType=INTEGER}, #{vm.orderId,jdbcType=INTEGER}, #{vm.settlementId,jdbcType=INTEGER},
        #{vm.orderNo,jdbcType=VARCHAR}, #{vm.thirdParthOrderNo,jdbcType=VARCHAR}, #{vm.oneselfSerialNumber,jdbcType=VARCHAR},
        #{vm.thirdPartySerialNumber,jdbcType=VARCHAR}, #{vm.paymentMode,jdbcType=TINYINT}, #{vm.payableAmount,jdbcType=DECIMAL},
        #{vm.actualAmount,jdbcType=DECIMAL}, #{vm.depositType,jdbcType=TINYINT}, #{vm.operationUserId,jdbcType=INTEGER},
        #{vm.operationUserName,jdbcType=VARCHAR}, #{vm.operationTime,jdbcType=TIMESTAMP}, #{vm.payeeUserName,jdbcType=VARCHAR},
        #{vm.payeeAccount,jdbcType=VARCHAR}, #{vm.paymentUserName,jdbcType=VARCHAR}, #{vm.paymentAccount,jdbcType=VARCHAR},
        #{vm.remark,jdbcType=VARCHAR}, #{vm.deleteStatus,jdbcType=TINYINT}, #{vm.createTime,jdbcType=TIMESTAMP},
        #{vm.createBy,jdbcType=INTEGER}
        )
        </foreach>
    </insert>

</mapper>