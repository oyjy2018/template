<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.ydc.dao.cgj.service.BRollDetailDao" >
  <resultMap id="BaseResultMap" type="com.ydc.model.cgj.BRollDetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="batch_code" property="batchCode" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="attribute" property="attribute" jdbcType="TINYINT" />
    <result column="roll_status" property="rollStatus" jdbcType="TINYINT" />
    <result column="valid_time" property="validTime" jdbcType="TIMESTAMP" />
    <result column="invalid_time" property="invalidTime" jdbcType="TIMESTAMP" />
    <result column="template_id" property="templateId" jdbcType="VARCHAR" />
    <result column="has_send" property="hasSend" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="status_ch" property="statusCh" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, `name`, amount, `type`, code, batch_code, content, attribute, roll_status, valid_time, invalid_time,
    template_id, has_send, `status`, status_ch, create_time, create_by, update_time,
    update_by
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_b_roll_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_b_roll_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ydc.model.cgj.BRollDetail" useGeneratedKeys="true" keyProperty="id" >
    insert into t_b_roll_detail (`name`, amount, `type`,
    code, batch_code, content, attribute,
    roll_status, valid_time, invalid_time,
    template_id, has_send, `status`,
    status_ch, create_time, create_by,
    update_time, update_by)
    values (#{name,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{type,jdbcType=TINYINT},
    #{code,jdbcType=VARCHAR}, #{batchCode,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{attribute,jdbcType=TINYINT},
    #{rollStatus,jdbcType=TINYINT}, #{validTime,jdbcType=TIMESTAMP}, #{invalidTime,jdbcType=TIMESTAMP},
    #{templateId,jdbcType=VARCHAR}, #{hasSend,jdbcType=TINYINT}, #{status,jdbcType=TINYINT},
    #{statusCh,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER},
    #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ydc.model.cgj.BRollDetail" useGeneratedKeys="true" keyProperty="id" >
    insert into t_b_roll_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      `name`,
      amount,
      `type`,
      code,
      batch_code,
      content,
      attribute,
      roll_status,
      valid_time,
      invalid_time,
      template_id,
      has_send,
      `status`,
      status_ch,
      create_time,
      create_by,
      update_time,
      update_by,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{name,jdbcType=VARCHAR},
      #{amount,jdbcType=DECIMAL},
      #{type,jdbcType=TINYINT},
      #{code,jdbcType=VARCHAR},
      #{batchCode,jdbcType=VARCHAR},
      #{content,jdbcType=VARCHAR},
      #{attribute,jdbcType=TINYINT},
      #{rollStatus,jdbcType=TINYINT},
      #{validTime,jdbcType=TIMESTAMP},
      #{invalidTime,jdbcType=TIMESTAMP},
      #{templateId,jdbcType=VARCHAR},
      #{hasSend,jdbcType=TINYINT},
      #{status,jdbcType=TINYINT},
      #{statusCh,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{createBy,jdbcType=INTEGER},
      #{updateTime,jdbcType=TIMESTAMP},
      #{updateBy,jdbcType=INTEGER},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ydc.model.cgj.BRollDetail" >
    update t_b_roll_detail
    <set >
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="batchCode != null" >
        batch_code = #{batchCode,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="attribute != null" >
        attribute = #{attribute,jdbcType=TINYINT},
      </if>
      <if test="rollStatus != null" >
        roll_status = #{rollStatus,jdbcType=TINYINT},
      </if>
      <if test="validTime != null" >
        valid_time = #{validTime,jdbcType=TIMESTAMP},
      </if>
      <if test="invalidTime != null" >
        invalid_time = #{invalidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="templateId != null" >
        template_id = #{templateId,jdbcType=VARCHAR},
      </if>
      <if test="hasSend != null" >
        has_send = #{hasSend,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="statusCh != null" >
        status_ch = #{statusCh,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ydc.model.cgj.BRollDetail" >
    update t_b_roll_detail
    set `name` = #{name,jdbcType=VARCHAR},
    amount = #{amount,jdbcType=DECIMAL},
    `type` = #{type,jdbcType=TINYINT},
    code = #{code,jdbcType=VARCHAR},
    batch_code = #{batchCode,jdbcType=VARCHAR},
    content = #{content,jdbcType=VARCHAR},
    attribute = #{attribute,jdbcType=TINYINT},
    roll_status = #{rollStatus,jdbcType=TINYINT},
    valid_time = #{validTime,jdbcType=TIMESTAMP},
    invalid_time = #{invalidTime,jdbcType=TIMESTAMP},
    template_id = #{templateId,jdbcType=VARCHAR},
    has_send = #{hasSend,jdbcType=TINYINT},
    `status` = #{status,jdbcType=TINYINT},
    status_ch = #{statusCh,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    create_by = #{createBy,jdbcType=INTEGER},
    update_time = #{updateTime,jdbcType=TIMESTAMP},
    update_by = #{updateBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getBlankRollCount" resultType="java.util.HashMap">
    SELECT
      type rollType,
      COUNT(1) rollNum
    FROM
      t_b_roll_detail
    WHERE
      roll_status = 0 AND
      has_send = 0 AND
      `status` = 1
      GROUP BY type
  </select>

  <select id="getRollDetailTypeNum" resultMap="BaseResultMap">
    SELECT
      <include refid="Base_Column_List" />
    FROM
      t_b_roll_detail
    WHERE
      type = #{rollType} AND
      roll_status = 0 AND
      has_send = 0 AND
      `status` = 1
      LIMIT #{num}
  </select>

  <update id="updateRollDetailHasSend">
    UPDATE
      t_b_roll_detail
    SET
      has_send = 1
    <where>
      <if test="rollCodeList != null and rollCodeList.size > 0">
        code IN
        <foreach collection="rollCodeList" separator="," item="rollCode" open="(" close=")">
          #{rollCode}
        </foreach>
      </if>
      <if test="rollCodeList == null or rollCodeList.size == 0">
        AND 1 = 0
      </if>
      AND roll_status = 0
      AND has_send = 0
      AND `status` = 1
    </where>
  </update>

  <insert id="insertRollDetailBatch" parameterType="java.util.List">
    insert into t_b_roll_detail (`name`, amount, `type`,
    code, batch_code, content,attribute,
    roll_status, valid_time, invalid_time,
    template_id,has_send, `status`,status_ch, create_time,
    create_by
    )
    values
    <foreach collection="list" item="item" separator=",">
    (#{item.name,jdbcType=VARCHAR}, #{item.amount,jdbcType=DECIMAL}, #{item.type,jdbcType=TINYINT},
    #{item.code,jdbcType=VARCHAR}, #{item.batchCode,jdbcType=VARCHAR}, #{item.content,jdbcType=VARCHAR}, #{item.attribute,jdbcType=TINYINT},
    #{item.rollStatus,jdbcType=TINYINT}, #{item.validTime,jdbcType=TIMESTAMP}, #{item.invalidTime,jdbcType=TIMESTAMP},
    #{item.templateId,jdbcType=VARCHAR}, #{item.hasSend,jdbcType=TINYINT}, #{item.status,jdbcType=TINYINT}, #{item.statusCh,jdbcType=VARCHAR},
    #{item.createTime,jdbcType=TIMESTAMP},#{item.createBy,jdbcType=INTEGER})
    </foreach>
  </insert>

  <update id="batchUpdateTicketStatus">
    UPDATE
      t_b_roll_detail
    SET
      roll_status = #{status}
    <where>
      <if test="rollCodes != null and rollCodes.size > 0">
        code IN
        <foreach collection="rollCodes" separator="," item="rollCode" open="(" close=")">
          #{rollCode}
        </foreach>
      </if>
      <if test="rollCodes == null or rollCodes.size == 0">
        AND 1 = 0
      </if>
      AND `status` = 1
    </where>
  </update>
  
  <select id="getBlankRollList" resultType="com.ydc.model.cgj.BRollDetail">
    SELECT
      id id,
      name name,
      amount amount,
      content content,
      code code,
      valid_time validTime,
      invalid_time invalidTime,
      type type,
      roll_status rollStatus
    FROM
      t_b_roll_detail
    <where>
      <if test="blankRollDto.rollCode != null and blankRollDto.rollCode != ''">
        `code` = #{blankRollDto.rollCode} AND
      </if>
      <if test="blankRollDto.startInvalidTime != null and blankRollDto.startInvalidTime != '' and blankRollDto.endInvalidTime != null and blankRollDto.endInvalidTime != ''">
        invalid_time BETWEEN #{blankRollDto.startInvalidTime}  AND #{blankRollDto.endInvalidTime} AND
      </if>
        has_send = 0 AND
        roll_status = 0 AND
        `status` = 1
        ORDER BY create_time DESC
    </where>
  </select>
  
  <select id="getBlankRollByCode" resultMap="BaseResultMap">
    SELECT
      <include refid="Base_Column_List" />
    FROM
      t_b_roll_detail
    WHERE
      `code` = #{blankRollDto.rollCode} AND
      `status` = 1
  </select>

    <select id="getBlankRollsByCode" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List" />
        FROM
            t_b_roll_detail
        <where>
            <if test="rollCodes != null and rollCodes.size > 0">
                code IN
                <foreach collection="rollCodes" separator="," item="rollCode" open="(" close=")">
                    #{rollCode}
                </foreach>
            </if>
            <if test="rollCodes == null or rollCodes.size == 0">
                AND 1 = 0
            </if>
            AND `status` = 1
        </where>
    </select>
</mapper>