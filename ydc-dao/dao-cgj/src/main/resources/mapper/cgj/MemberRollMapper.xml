<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.ydc.dao.cgj.user.MemberRollDao" >
  <resultMap id="BaseResultMap" type="com.ydc.model.cgj.MemberRoll" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="member_phone" property="memberPhone" jdbcType="VARCHAR" />
    <result column="roll_id" property="rollId" jdbcType="INTEGER" />
    <result column="roll_name" property="rollName" jdbcType="VARCHAR" />
    <result column="roll_code" property="rollCode" jdbcType="VARCHAR" />
    <result column="roll_amount" property="rollAmount" jdbcType="DECIMAL" />
    <result column="roll_type" property="rollType" jdbcType="TINYINT" />
    <result column="roll_status" property="rollStatus" jdbcType="TINYINT" />
    <result column="roll_content" property="rollContent" jdbcType="VARCHAR" />
    <result column="roll_attribute" property="rollAttribute" jdbcType="TINYINT" />
    <result column="loan_id" property="loanId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="used_time" property="usedTime" jdbcType="TIMESTAMP" />
    <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="invalid_time" property="invalidTime" jdbcType="TIMESTAMP" />
    <result column="send_description" property="sendDescription" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, member_id, member_name, member_phone, roll_id, roll_name, roll_code, roll_amount,
    roll_status, roll_type, roll_content, roll_attribute, loan_id, order_no, used_time, send_time, invalid_time, send_description,
    `status`, create_time, create_by, update_time, update_by
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_member_roll
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_member_roll
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ydc.model.cgj.MemberRoll" useGeneratedKeys="true" keyProperty="id" >
    insert into t_member_roll (member_id, member_name, member_phone,
      roll_id, roll_name, roll_code,
      roll_amount, roll_type, roll_status, roll_content, roll_attribute,
      loan_id, order_no, used_time, send_time, invalid_time, send_description,
      `status`, create_time, create_by,
      update_time, update_by)
    values (#{memberId,jdbcType=INTEGER}, #{memberName,jdbcType=VARCHAR}, #{memberPhone,jdbcType=VARCHAR},
      #{rollId,jdbcType=INTEGER}, #{rollName,jdbcType=VARCHAR}, #{rollCode,jdbcType=VARCHAR},
      #{rollAmount,jdbcType=DECIMAL}, #{rollType,jdbcType=TINYINT}, #{rollStatus,jdbcType=TINYINT}, #{rollContent,jdbcType=VARCHAR}, #{rollAttribute,jdbcType=TINYINT},
      #{loanId,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{usedTime,jdbcType=TIMESTAMP}, #{sendTime,jdbcType=TIMESTAMP}, #{invalidTime,jdbcType=TIMESTAMP}, #{sendDescription,jdbcType=VARCHAR},
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER},
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ydc.model.cgj.MemberRoll" useGeneratedKeys="true" keyProperty="id" >
    insert into t_member_roll
    <trim prefix="(" suffix=")" suffixOverrides="," >
      member_id,
      member_name,
      member_phone,
      roll_id,
      roll_name,
      roll_code,
      roll_amount,
      roll_type,
      roll_status,
      roll_content,
      roll_attribute,
      loan_id,
      order_no,
      used_time,
      send_time,
      invalid_time,
      send_description,
      `status`,
      create_time,
      create_by,
      update_time,
      update_by,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{memberId,jdbcType=INTEGER},
      #{memberName,jdbcType=VARCHAR},
      #{memberPhone,jdbcType=VARCHAR},
      #{rollId,jdbcType=INTEGER},
      #{rollName,jdbcType=VARCHAR},
      #{rollCode,jdbcType=VARCHAR},
      #{rollAmount,jdbcType=DECIMAL},
      #{rollType,jdbcType=TINYINT},
      #{rollStatus,jdbcType=TINYINT},
      #{rollContent,jdbcType=VARCHAR},
      #{rollAttribute,jdbcType=TINYINT},
      #{loanId,jdbcType=INTEGER},
      #{orderNo,jdbcType=VARCHAR},
      #{usedTime,jdbcType=TIMESTAMP},
      #{sendTime,jdbcType=TIMESTAMP},
      #{invalidTime,jdbcType=TIMESTAMP},
      #{sendDescription,jdbcType=VARCHAR},
      #{status,jdbcType=TINYINT},
      #{createTime,jdbcType=TIMESTAMP},
      #{createBy,jdbcType=INTEGER},
      #{updateTime,jdbcType=TIMESTAMP},
      #{updateBy,jdbcType=INTEGER},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ydc.model.cgj.MemberRoll" >
    update t_member_roll
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="memberName != null" >
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberPhone != null" >
        member_phone = #{memberPhone,jdbcType=VARCHAR},
      </if>
      <if test="rollId != null" >
        roll_id = #{rollId,jdbcType=INTEGER},
      </if>
      <if test="rollName != null" >
        roll_name = #{rollName,jdbcType=VARCHAR},
      </if>
      <if test="rollCode != null" >
        roll_code = #{rollCode,jdbcType=VARCHAR},
      </if>
      <if test="rollAmount != null" >
        roll_amount = #{rollAmount,jdbcType=DECIMAL},
      </if>
      <if test="rollType != null" >
        roll_type = #{rollType,jdbcType=TINYINT},
      </if>
      <if test="rollStatus != null" >
        roll_status = #{rollStatus,jdbcType=TINYINT},
      </if>
      <if test="rollContent != null" >
        roll_content = #{rollContent,jdbcType=VARCHAR},
      </if>
      <if test="rollAttribute != null" >
        roll_attribute = #{rollAttribute,jdbcType=TINYINT},
      </if>
      <if test="loanId != null" >
        loan_id = #{loanId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="usedTime != null" >
        used_time = #{usedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="invalidTime != null" >
        invalid_time = #{invalidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendDescription != null" >
        send_description = #{sendDescription,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ydc.model.cgj.MemberRoll" >
    update t_member_roll
    set member_id = #{memberId,jdbcType=INTEGER},
      member_name = #{memberName,jdbcType=VARCHAR},
      member_phone = #{memberPhone,jdbcType=VARCHAR},
      roll_id = #{rollId,jdbcType=INTEGER},
      roll_name = #{rollName,jdbcType=VARCHAR},
      roll_code = #{rollCode,jdbcType=VARCHAR},
      roll_amount = #{rollAmount,jdbcType=DECIMAL},
      roll_type = #{rollType,jdbcType=TINYINT},
      roll_status = #{rollStatus,jdbcType=TINYINT},
      roll_content = #{rollContent,jdbcType=VARCHAR},
      roll_attribute = #{rollAttribute,jdbcType=TINYINT},
      loan_id = #{loanId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=VARCHAR},
      used_time = #{usedTime,jdbcType=TIMESTAMP},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      invalid_time = #{invalidTime,jdbcType=TIMESTAMP},
      send_description = #{sendDescription,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getMemberRollByType" resultType="java.util.HashMap">
    SELECT
      member_phone memberPhone,
      roll_type rollType,
      roll_name rollName,
      roll_amount rollAmount,
      roll_content rollContent,
      roll_code rollCode,
      roll_attribute rollAttribute,
      roll_status rollStatus,
      DATE_FORMAT(invalid_time,'%Y-%m-%d %H:%i:%s') invalidTime
    FROM
      t_member_roll
    WHERE
      member_id = #{memberRollDto.memberId} AND
      <if test="memberRollDto.rollType != null and memberRollDto.rollType != '' and memberRollDto.rollType != 0">
        roll_type = #{memberRollDto.rollType} AND
      </if>
      <if test="memberRollDto.rollStatus != null and memberRollDto.rollStatus != -1">
        roll_status = #{memberRollDto.rollStatus} AND
      </if>
      `status` = 1
      ORDER BY roll_status ASC, invalid_time ASC
  </select>

  <select id="getMemberRollList" resultType="java.util.Map">
    SELECT
        tmr.member_id memberId,
        tmr.member_name memberName,
        tmr.member_phone memberPhone,
        tmr.roll_name rollName,
        tmr.roll_amount rollAmount,
        tmr.roll_content rollContent,
        tmr.roll_code rollCode,
        tmr.roll_type rollType,
        DATE_FORMAT(tmr.used_time,'%Y-%m-%d %H:%i:%s') usedTime,
        DATE_FORMAT(tmr.send_time,'%Y-%m-%d %H:%i:%s') sendTime,
        DATE_FORMAT(tmr.invalid_time,'%Y-%m-%d %H:%i:%s') invalidTime,
        tma.type useType,
        (SELECT tu.user_name FROM t_user tu WHERE tu.id = tmr.create_by) sendName,
        tmr.send_description sendDescription,
        tma.order_no orderNo,
        tma.store_name storeName,
        tma.store_code storeCode,
        tmr.roll_status rollStatus,
        IFNULL(tmr.order_no,'') buyOrderNo
    FROM
        t_member_roll tmr
        LEFT JOIN t_member_appointment_roll tmar ON tmr.id = tmar.roll_id AND tmar.roll_status != 3 AND tmar.`status` = 1
        LEFT JOIN t_member_appointment tma ON tmar.appoint_id = tma.id AND tma.`status` = 1
    WHERE
        <if test="memberRollDto.loanId != null and memberRollDto.loanId != ''">
          tmr.loan_id = #{memberRollDto.loanId} AND
        </if>
        <if test="memberRollDto.memberId != null and memberRollDto.memberId != ''">
          tmr.member_id = #{memberRollDto.memberId} AND
        </if>
        <if test="memberRollDto.appointId != null and memberRollDto.appointId != ''">
          tmar.appoint_id = #{memberRollDto.appointId} AND
        </if>
        <if test="memberRollDto.mobilePhone != null and memberRollDto.mobilePhone != ''">
            tmr.member_phone = #{memberRollDto.mobilePhone} AND
        </if>
        <if test="memberRollDto.startInvalidTime != null and memberRollDto.startInvalidTime != '' and memberRollDto.endInvalidTime != null and memberRollDto.endInvalidTime != ''">
            tmr.invalid_time BETWEEN #{memberRollDto.startInvalidTime} AND #{memberRollDto.endInvalidTime} AND
        </if>
        <if test="memberRollDto.startUsedTime != null and memberRollDto.startUsedTime != '' and memberRollDto.endUsedTime != null and memberRollDto.endUsedTime != ''">
            tmr.used_time BETWEEN #{memberRollDto.startUsedTime} AND #{memberRollDto.endUsedTime} AND
        </if>
        <if test="memberRollDto.rollCode != null and memberRollDto.rollCode != ''">
          tmr.roll_code = #{memberRollDto.rollCode} AND
        </if>
        <if test="memberRollDto.buyOrderNo != null and memberRollDto.buyOrderNo != ''">
          tmr.order_no = #{memberRollDto.buyOrderNo} AND
        </if>
        <if test="memberRollDto.orderNo != null and memberRollDto.orderNo != ''">
          tma.order_no = #{memberRollDto.orderNo} AND
        </if>
        tmr.`status` = 1
        order by tmr.create_time DESC
  </select>

  <insert id="batchInsert" parameterType="java.util.List">
    insert into t_member_roll (member_id, member_name, member_phone,
    roll_id, roll_name, roll_code,
    roll_amount, roll_type, roll_status, roll_content, roll_attribute,
    loan_id, order_no, send_time, invalid_time, send_description,
    `status`, create_time, create_by,
    update_time, update_by)
    values
    <foreach collection="memberRollList" item="item" index="index" separator=",">
      (#{item.memberId,jdbcType=INTEGER}, #{item.memberName,jdbcType=VARCHAR}, #{item.memberPhone,jdbcType=VARCHAR},
      #{item.rollId,jdbcType=INTEGER}, #{item.rollName,jdbcType=VARCHAR}, #{item.rollCode,jdbcType=VARCHAR},
      #{item.rollAmount,jdbcType=DECIMAL}, #{item.rollType,jdbcType=TINYINT}, #{item.rollStatus,jdbcType=TINYINT}, #{item.rollContent,jdbcType=VARCHAR}, #{item.rollAttribute,jdbcType=TINYINT},
      #{item.loanId,jdbcType=INTEGER}, #{item.orderNo,jdbcType=VARCHAR}, #{item.sendTime,jdbcType=TIMESTAMP}, #{item.invalidTime,jdbcType=TIMESTAMP}, #{item.sendDescription,jdbcType=VARCHAR},
      #{item.status,jdbcType=TINYINT}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.createBy,jdbcType=INTEGER},
      #{item.updateTime,jdbcType=TIMESTAMP}, #{item.updateBy,jdbcType=INTEGER})
    </foreach>
  </insert>

  <select id="getTimeInfoByLoanId" resultType="java.util.Map">
    SELECT
      (SELECT COUNT(1) FROM t_member_roll WHERE loan_id = 90668 AND `status` = 1) num,
      create_time createTime
    FROM
      t_member_roll
    WHERE
      loan_id = #{loanId} AND
      `status` = 1
      ORDER BY create_time DESC
      LIMIT 1
  </select>

  <select id="getRollByCodeAndStatus" resultMap="BaseResultMap">
    SELECT
      <include refid="Base_Column_List"/>
    FROM
      t_member_roll
    WHERE
      <if test="rollCodeList != null and rollCodeList.size > 0">
        roll_code IN
        <foreach collection="rollCodeList" item="rollCode" open="(" close=")" separator=",">
           #{rollCode}
        </foreach>
        AND
      </if>
      member_id = #{memberId} AND
      roll_status = #{rollStatus} AND
      `status` = 1
  </select>
  
  <update id="updateRollStatusByStatus">
    UPDATE
      t_member_roll
    <set>
        <if test="useTime != null">
            used_time = #{useTime},
        </if>
        roll_status = #{rollStatus}
    </set>
    WHERE
      roll_code = #{rollCode} AND
      `status` = 1
  </update>

  <select id="getCountMemberRollByType" resultType="java.lang.Integer">
    SELECT
      count(1)
    FROM
    t_member_roll
    WHERE
    member_id = #{memberRollDto.memberId} AND
    <if test="memberRollDto.rollType != null and memberRollDto.rollType != '' and memberRollDto.rollType != 0">
      roll_type = #{memberRollDto.rollType} AND
    </if>
    <if test="memberRollDto.rollStatus != null and memberRollDto.rollStatus != -1">
      roll_status = #{memberRollDto.rollStatus} AND
    </if>
    `status` = 1
  </select>

  <update id="batchUpdateMemberRollStatus">
    UPDATE
      t_member_roll
    SET
    `status` = #{status}
    <where>
      <if test="rollCodes != null and rollCodes.size > 0">
        roll_code IN
        <foreach collection="rollCodes" separator="," item="rollCode" open="(" close=")">
          #{rollCode}
        </foreach>
      </if>
      <if test="rollCodes == null or rollCodes.size == 0">
        AND 1 = 0
      </if>
    </where>
  </update>
</mapper>