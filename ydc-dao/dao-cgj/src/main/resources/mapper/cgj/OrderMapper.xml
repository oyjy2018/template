<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.ydc.dao.cgj.order.OrderDao">
    <resultMap id="BaseResultMap" type="com.ydc.model.cgj.Order">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="member_id" property="memberId" jdbcType="INTEGER" />
        <result column="order_number" property="orderNumber" jdbcType="VARCHAR" />
        <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
        <result column="supplier_code" property="supplierCode" jdbcType="VARCHAR" />
        <result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
        <result column="buyer_message" property="buyerMessage" jdbcType="VARCHAR" />
        <result column="logistics_status" property="logisticsStatus" jdbcType="INTEGER" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
        <result column="cancel_reason" property="cancelReason" jdbcType="VARCHAR" />
        <result column="cancel_time" property="cancelTime" jdbcType="TIMESTAMP" />
        <result column="commodity_count" property="commodityCount" jdbcType="INTEGER" />
        <result column="order_amount" property="orderAmount" jdbcType="DECIMAL" />
        <result column="payment_currency" property="paymentCurrency" jdbcType="VARCHAR" />
        <result column="pay_account" property="payAccount" jdbcType="VARCHAR" />
        <result column="pay_water" property="payWater" jdbcType="VARCHAR" />
        <result column="payment_method" property="paymentMethod" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="create_by" property="createBy" jdbcType="INTEGER" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List">
        id, member_id,order_number, order_no, supplier_code, supplier_name, buyer_message, logistics_status,
        `status`, payment_time, cancel_reason, cancel_time, commodity_count, order_amount,
        payment_currency, pay_account, pay_water, payment_method, create_time, create_by,
        update_time, update_by
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_order
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from t_order
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.ydc.model.cgj.Order"  useGeneratedKeys="true" keyProperty="id">
        insert into t_order (member_id,order_number, order_no, supplier_code,
        supplier_name, buyer_message, logistics_status,
        `status`, payment_time, cancel_reason,
        cancel_time, commodity_count, order_amount,
        payment_currency, pay_account, pay_water,
        payment_method, create_time, create_by,
        update_time, update_by)
        values (#{memberId,jdbcType=INTEGER},#{orderNumber,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, #{supplierCode,jdbcType=VARCHAR},
        #{supplierName,jdbcType=VARCHAR}, #{buyerMessage,jdbcType=VARCHAR}, #{logisticsStatus,jdbcType=INTEGER},
        #{status,jdbcType=INTEGER}, #{paymentTime,jdbcType=TIMESTAMP}, #{cancelReason,jdbcType=VARCHAR},
        #{cancelTime,jdbcType=TIMESTAMP}, #{commodityCount,jdbcType=INTEGER}, #{orderAmount,jdbcType=DECIMAL},
        #{paymentCurrency,jdbcType=VARCHAR}, #{payAccount,jdbcType=VARCHAR}, #{payWater,jdbcType=VARCHAR},
        #{paymentMethod,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER},
        #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.ydc.model.cgj.Order" useGeneratedKeys="true" keyProperty="id">
        insert into t_order
        <trim prefix="(" suffix=")" suffixOverrides="," >
            member_id,
            order_number,
            order_no,
            supplier_code,
            supplier_name,
            buyer_message,
            logistics_status,
            `status`,
            payment_time,
            cancel_reason,
            cancel_time,
            commodity_count,
            order_amount,
            payment_currency,
            pay_account,
            pay_water,
            payment_method,
            create_time,
            create_by,
            update_time,
            update_by,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            #{memberId,jdbcType=INTEGER},
            #{orderNumber,jdbcType=VARCHAR},
            #{orderNo,jdbcType=VARCHAR},
            #{supplierCode,jdbcType=VARCHAR},
            #{supplierName,jdbcType=VARCHAR},
            #{buyerMessage,jdbcType=VARCHAR},
            #{logisticsStatus,jdbcType=INTEGER},
            #{status,jdbcType=INTEGER},
            #{paymentTime,jdbcType=TIMESTAMP},
            #{cancelReason,jdbcType=VARCHAR},
            #{cancelTime,jdbcType=TIMESTAMP},
            #{commodityCount,jdbcType=INTEGER},
            #{orderAmount,jdbcType=DECIMAL},
            #{paymentCurrency,jdbcType=VARCHAR},
            #{payAccount,jdbcType=VARCHAR},
            #{payWater,jdbcType=VARCHAR},
            #{paymentMethod,jdbcType=VARCHAR},
            #{createTime,jdbcType=TIMESTAMP},
            #{createBy,jdbcType=INTEGER},
            #{updateTime,jdbcType=TIMESTAMP},
            #{updateBy,jdbcType=INTEGER},
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ydc.model.cgj.Order">
        update t_order
        <set >
            <if test="memberId != null" >
                member_id = #{memberId,jdbcType=INTEGER},
            </if>
            <if test="orderNumber != null" >
                order_number = #{orderNumber,jdbcType=VARCHAR},
            </if>
            <if test="orderNo != null" >
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="supplierCode != null" >
                supplier_code = #{supplierCode,jdbcType=VARCHAR},
            </if>
            <if test="supplierName != null" >
                supplier_name = #{supplierName,jdbcType=VARCHAR},
            </if>
            <if test="buyerMessage != null" >
                buyer_message = #{buyerMessage,jdbcType=VARCHAR},
            </if>
            <if test="logisticsStatus != null" >
                logistics_status = #{logisticsStatus,jdbcType=INTEGER},
            </if>
            <if test="status != null" >
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="paymentTime != null" >
                payment_time = #{paymentTime,jdbcType=TIMESTAMP},
            </if>
            <if test="cancelReason != null" >
                cancel_reason = #{cancelReason,jdbcType=VARCHAR},
            </if>
            <if test="cancelTime != null" >
                cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
            </if>
            <if test="commodityCount != null" >
                commodity_count = #{commodityCount,jdbcType=INTEGER},
            </if>
            <if test="orderAmount != null" >
                order_amount = #{orderAmount,jdbcType=DECIMAL},
            </if>
            <if test="paymentCurrency != null" >
                payment_currency = #{paymentCurrency,jdbcType=VARCHAR},
            </if>
            <if test="payAccount != null" >
                pay_account = #{payAccount,jdbcType=VARCHAR},
            </if>
            <if test="payWater != null" >
                pay_water = #{payWater,jdbcType=VARCHAR},
            </if>
            <if test="paymentMethod != null" >
                payment_method = #{paymentMethod,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null" >
                create_by = #{createBy,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null" >
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ydc.model.cgj.Order">
        update t_order
        set member_id = #{memberId,jdbcType=INTEGER},
        order_number = #{orderNumber,jdbcType=VARCHAR},
        order_no = #{orderNo,jdbcType=VARCHAR},
        supplier_code = #{supplierCode,jdbcType=VARCHAR},
        supplier_name = #{supplierName,jdbcType=VARCHAR},
        buyer_message = #{buyerMessage,jdbcType=VARCHAR},
        logistics_status = #{logisticsStatus,jdbcType=INTEGER},
        `status` = #{status,jdbcType=INTEGER},
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
        cancel_reason = #{cancelReason,jdbcType=VARCHAR},
        cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
        commodity_count = #{commodityCount,jdbcType=INTEGER},
        order_amount = #{orderAmount,jdbcType=DECIMAL},
        payment_currency = #{paymentCurrency,jdbcType=VARCHAR},
        pay_account = #{payAccount,jdbcType=VARCHAR},
        pay_water = #{payWater,jdbcType=VARCHAR},
        payment_method = #{paymentMethod,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_by = #{createBy,jdbcType=INTEGER},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        update_by = #{updateBy,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getOrderList" resultType="java.util.Map">
        SELECT
        tor.id,
        tor.member_id,
        tm.member_name,
        tm.mobile_phone,
        DATE_FORMAT(tor.create_time,'%Y-%m-%d %H:%i:%s') create_time,
        tor.order_no,
        tor.supplier_code,
        tor.supplier_name,
        tor.commodity_count,
        tor.order_amount,
        case tor.payment_method when 'integral' then '积分抵扣' when 'wechatPay' then '微信支付' else '' end payment_currency,
        toda.addressee,
        toda.phone_number,
        toda.consignee_address,
        tor.buyer_message,
        tor.logistics_status logistics_status_code,
        CASE tor.logistics_status WHEN 0 THEN '待发货' WHEN 1 THEN '全部发货' WHEN 2 THEN '部分发货' ELSE '' END logistics_status,
        CASE tor.status WHEN 0 THEN '创建订单' WHEN 1 THEN '待付款' WHEN 2 THEN '待发货' WHEN 3 THEN '待收货' WHEN 4 THEN
        '交易成功' WHEN 8 THEN '交易关闭' ELSE '' END order_status,
        tor.status
        <include refid="getOrderListCommon"/>
        ORDER BY tor.id DESC
        LIMIT ${orderReqDTO.page},${orderReqDTO.rows}
    </select>

    <select id="getOrderListCount"  resultType="java.util.Map">
        SELECT COUNT(1) cnt
        <include refid="getOrderListCommon"/>
    </select>

    <sql id="getOrderListCommon">
        FROM t_order tor
        JOIN t_member tm on tm.id = tor.member_id
        LEFT JOIN t_order_delivery_address toda ON toda.order_id = tor.id
        WHERE 1=1
        <if test="orderReqDTO.orderNo != null and orderReqDTO.orderNo != ''">
            AND tor.order_no = #{orderReqDTO.orderNo,jdbcType=VARCHAR}
        </if>
        <if test="orderReqDTO.startCreateTime != null and orderReqDTO.startCreateTime != ''">
            AND tor.create_time <![CDATA[ > ]]> #{orderReqDTO.startCreateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="orderReqDTO.endCreateTime != null and orderReqDTO.endCreateTime != ''">
            AND tor.create_time <![CDATA[ < ]]> #{orderReqDTO.endCreateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="orderReqDTO.supplierCode != null and orderReqDTO.supplierCode != ''">
            AND tor.supplier_code = #{orderReqDTO.supplierCode,jdbcType=VARCHAR}
        </if>
        <if test="orderReqDTO.orderStatus != null">
            AND tor.status = #{orderReqDTO.orderStatus,jdbcType=INTEGER}
        </if>
        <if test="orderReqDTO.mobilePhone != null and orderReqDTO.mobilePhone != ''">
            AND tm.mobile_phone = #{orderReqDTO.mobilePhone,jdbcType=VARCHAR}
        </if>
    </sql>

    <select id="getOrdersByMemberId" resultType="com.ydc.commom.view.vo.cgj.order.MyOrderVO">
        SELECT
        tor.id orderId,
        tor.supplier_code supplierCode,
        IFNULL(tor.supplier_name,'') supplierName,
        tor.order_amount orderAmount,
        tor.commodity_count commodityCount,
        tor.status orderStatus,
        <!--(CASE tor.status WHEN 0 THEN '创建订单' WHEN 1 THEN '待付款' WHEN 2 THEN '待发货' WHEN 3 THEN '待收货' WHEN 4 THEN '交易成功' WHEN 8 THEN '订单关闭' ELSE '' END) orderStatusName,-->
        tor.order_no orderNo,
        IFNULL(tor.order_number,'') orderNumber,
        IFNULL(tor.pay_water,'') payWater,
        DATE_FORMAT(tor.create_time,'%Y-%m-%d %H:%i:%s') createTime,
        IFNULL(DATE_FORMAT(tor.payment_time,'%Y-%m-%d %H:%i:%s'),'') paymentTime
        FROM t_order tor
        WHERE tor.member_id = #{myOrderDTO.memberId,jdbcType=INTEGER}
        <choose>
            <when test="myOrderDTO.status != null and myOrderDTO.status != ''">
                AND tor.status = #{myOrderDTO.status,jdbcType=INTEGER}
            </when>
            <otherwise>
                AND tor.status != 0
            </otherwise>
        </choose>
        ORDER BY tor.create_time DESC
    </select>


    <select id="getOrderByMemberId" resultType="com.ydc.commom.view.vo.cgj.order.MyOrderVO">
        SELECT
        tor.id orderId,
        tor.supplier_code supplierCode,
        IFNULL(tor.supplier_name,'') supplierName,
        tor.order_amount orderAmount,
        tor.commodity_count commodityCount,
        tor.status orderStatus,
        tor.order_no orderNo,
        IFNULL(tor.order_number,'') orderNumber,
        IFNULL(tor.pay_water,'') payWater,
        DATE_FORMAT(tor.create_time,'%Y-%m-%d %H:%i:%s') createTime,
        IFNULL(DATE_FORMAT(tor.payment_time,'%Y-%m-%d %H:%i:%s'),'') paymentTime,
        IFNULL(tor.cancel_reason,'') cancelReason
        FROM t_order tor
        WHERE tor.id = #{orderDetailsDTO.orderId,jdbcType=INTEGER} AND tor.member_id = #{orderDetailsDTO.memberId,jdbcType=INTEGER}
    </select>

    <update id="cancelOrder">
        UPDATE t_order tor
        SET
        tor.cancel_time = #{cancelTime,jdbcType=VARCHAR},
        tor.cancel_reason = #{cancelReason,jdbcType=VARCHAR},
        tor.status = #{status,jdbcType=INTEGER},
        tor.update_time = NOW(),
        tor.update_by = #{memberId,jdbcType=INTEGER}
        WHERE tor.id = #{orderId,jdbcType=INTEGER}
                AND tor.status = #{oldStatus,jdbcType=INTEGER};
    </update>

    <update id="notarizeReceiving">
        UPDATE t_order tor
        SET
        tor.status = #{status,jdbcType=INTEGER},
        tor.update_time = NOW(),
        tor.update_by = #{memberId,jdbcType=INTEGER}
        WHERE tor.id = #{orderId,jdbcType=INTEGER}
    </update>

    <select id="selectByOrderNo" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from t_order
        where order_no = #{orderNo,jdbcType=VARCHAR}
    </select>

    <update id="updateByOrderNoAndStatus" parameterType="java.util.Map">
        update t_order
        <set>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=INTEGER},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="newStatus != null">
                `status` = #{newStatus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="paymentTime != null">
                payment_time = #{paymentTime,jdbcType=TIMESTAMP},
            </if>
            <if test="cancelTime != null">
                cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
            </if>
            <if test="commodityCount != null">
                commodity_count = #{commodityCount,jdbcType=INTEGER},
            </if>
            <if test="orderAmount != null">
                order_amount = #{orderAmount,jdbcType=DECIMAL},
            </if>
            <if test="paymentCurrency != null">
                payment_currency = #{paymentCurrency,jdbcType=VARCHAR},
            </if>
            <if test="paymentMethod != null">
                payment_method = #{paymentMethod,jdbcType=VARCHAR},
            </if>
            <if test="payAccount != null">
                pay_account = #{payAccount,jdbcType=VARCHAR},
            </if>
            <if test="payWater != null">
                pay_water = #{payWater,jdbcType=VARCHAR},
            </if>
        </set>
        where order_no = #{orderNo,jdbcType=VARCHAR}
                and `status` = #{oldStatus,jdbcType=INTEGER}
    </update>


    <update id="updateBatchByStatus" parameterType="java.util.Map">
        update t_order
        <set>
            <if test="newStatus != null">
                `status` = #{newStatus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="paymentTime != null">
                payment_time = #{paymentTime,jdbcType=TIMESTAMP},
            </if>
            <if test="cancelTime != null">
                cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
            </if>
            <if test="paymentCurrency != null">
                payment_currency = #{paymentCurrency,jdbcType=VARCHAR},
            </if>
            <if test="paymentMethod != null">
                payment_method = #{paymentMethod,jdbcType=VARCHAR},
            </if>
            <if test="payAccount != null">
                pay_account = #{payAccount,jdbcType=VARCHAR},
            </if>
            <if test="payWater != null">
                pay_water = #{payWater,jdbcType=VARCHAR},
            </if>
        </set>
        where
        order_no in
        <foreach item="orderNos" collection="orderNos" open="(" separator="," close=")">
            #{orderNos}
        </foreach>
        and  `status`  = #{oldStatus,jdbcType=INTEGER}
    </update>

    <select id="getOrderByStatus" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_order WHERE status = #{status,jdbcType=INTEGER}
    </select>

    <update id="updateBatch">
        update t_order
        set
            cancel_time = NOW(),
            cancel_reason = '系统自动关闭订单',
            status = 8,
            update_time = NOW(),
            update_by = 1
        WHERE id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND status = #{status,jdbcType=INTEGER}
    </update>

    <select id="getOrderStatusNum" resultType="com.ydc.commom.view.vo.cgj.order.OrderStatusNumVO">
        SELECT IFNULL(status,'') status,
           count(*) AS num
        FROM t_order
        WHERE member_id = #{memberId,jdbcType=INTEGER}
            AND status IN (1,2,3,4)
        GROUP BY status;
    </select>
    
    <update id="updateAutoConfirmReceipt">
        UPDATE t_order
        SET status = 4,
            update_time = NOW()
        WHERE id = #{orderId,jdbcType=INTEGER} AND status = 3;
    </update>

    <select id="getOrderByOrderCommodityIds" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_order tor
        WHERE tor.id = (SELECT t.order_id FROM t_order_commodity t WHERE t.id IN(${orderCommodityIds}) LIMIT 1)
    </select>

    <update id="updateOrderStatusByWater">
        UPDATE
            t_order
        SET
            status = #{newStatus}
            <if test="paymentTime != null">
                ,payment_time = #{paymentTime}
            </if>
        WHERE
            pay_water = #{payWater} and
            status = #{oldStatus}
    </update>

    <select id="getRollNumInOrder" resultType="java.util.Map">
        SELECT
            t.member_id memberId,
            tcc.main_classify_code mainClassifyCode,
            tcc.son_classify_code rollType,
            toc.commodity_model_number rollNum,
            t.order_no orderNo
        FROM t_order t
            LEFT JOIN t_order_commodity toc ON t.id = toc.order_id
            LEFT JOIN t_c_commodity tcc ON toc.commodity_id = tcc.id
        WHERE
            t.pay_water = #{payWater} AND t.`status` = 2
    </select>
    
    <select id="getOrderMemberId" resultType="java.lang.Integer">
        SELECT
           t.member_id
        FROM
            t_order t
        WHERE
            t.pay_water = #{payWater}
            limit 1
    </select>

    <update id="updateSendRollOrderStatus">
        UPDATE
            t_order
        SET
            logistics_status = 1,
            `status` = 4,
            payment_time = NOW()
        WHERE
            order_no IN
            <foreach collection="orderNoList" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
            AND `status` = 2
    </update>
</mapper>