<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.ydc.dao.cgj.user.LogLoginDao" >
  <resultMap id="BaseResultMap" type="com.ydc.model.cgj.LogLogin" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="user_application" property="userApplication" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="ip_address" property="ipAddress" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, user_name, login_name, login_time, user_application, role_name, ip_address
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_log_login
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_log_login
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ydc.model.cgj.LogLogin" useGeneratedKeys="true" keyProperty="id" >
    insert into t_log_login (user_id, user_name, login_name,
    login_time, user_application, role_name,
    ip_address)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR},
    #{loginTime,jdbcType=TIMESTAMP}, #{userApplication,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR},
    #{ipAddress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ydc.model.cgj.LogLogin" useGeneratedKeys="true" keyProperty="id" >
    insert into t_log_login
    <trim prefix="(" suffix=")" suffixOverrides="," >
      user_id,
      user_name,
      login_name,
      login_time,
      user_application,
      role_name,
      ip_address,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{userId,jdbcType=INTEGER},
      #{userName,jdbcType=VARCHAR},
      #{loginName,jdbcType=VARCHAR},
      #{loginTime,jdbcType=TIMESTAMP},
      #{userApplication,jdbcType=INTEGER},
      #{roleName,jdbcType=VARCHAR},
      #{ipAddress,jdbcType=VARCHAR},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ydc.model.cgj.LogLogin" >
    update t_log_login
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userApplication != null" >
        user_application = #{userApplication,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null" >
        ip_address = #{ipAddress,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ydc.model.cgj.LogLogin" >
    update t_log_login
    set user_id = #{userId,jdbcType=INTEGER},
    user_name = #{userName,jdbcType=VARCHAR},
    login_name = #{loginName,jdbcType=VARCHAR},
    login_time = #{loginTime,jdbcType=TIMESTAMP},
    user_application = #{userApplication,jdbcType=INTEGER},
    role_name = #{roleName,jdbcType=VARCHAR},
    ip_address = #{ipAddress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>