<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.ydc.dao.cgj.user.ServiceUserRoleDao" >
    <resultMap id="BaseResultMap" type="com.ydc.model.cgj.ServiceUserRole" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="cgj_role_id" property="cgjRoleId" jdbcType="INTEGER" />
        <result column="rental_role_id" property="rentalRoleId" jdbcType="INTEGER" />
        <result column="ydhc_role_id" property="ydhcRoleId" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="create_by" property="createBy" jdbcType="INTEGER" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    </resultMap>
  <sql id="Base_Column_List" >
      id, user_id, cgj_role_id, rental_role_id, ydhc_role_id, create_time, create_by, update_time,
      update_by
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_cfg_service_user_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_cfg_service_user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertServiceUserRole" parameterType="com.ydc.model.cgj.ServiceUserRole" useGeneratedKeys="true" keyProperty="id" >
      insert into t_cfg_service_user_role (user_id, cgj_role_id, rental_role_id,
      ydhc_role_id, create_time, create_by,
      update_time, update_by)
      values (#{userId,jdbcType=INTEGER}, #{cgjRoleId,jdbcType=INTEGER}, #{rentalRoleId,jdbcType=INTEGER},
      #{ydhcRoleId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER},
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ydc.model.cgj.ServiceUserRole" useGeneratedKeys="true" keyProperty="id" >
      insert into t_cfg_service_user_role
      <trim prefix="(" suffix=")" suffixOverrides="," >
          user_id,
          cgj_role_id,
          rental_role_id,
          ydhc_role_id,
          create_time,
          create_by,
          update_time,
          update_by,
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides="," >
          #{userId,jdbcType=INTEGER},
          #{cgjRoleId,jdbcType=INTEGER},
          #{rentalRoleId,jdbcType=INTEGER},
          #{ydhcRoleId,jdbcType=INTEGER},
          #{createTime,jdbcType=TIMESTAMP},
          #{createBy,jdbcType=INTEGER},
          #{updateTime,jdbcType=TIMESTAMP},
          #{updateBy,jdbcType=INTEGER},
      </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ydc.model.cgj.ServiceUserRole" >
      update t_cfg_service_user_role
      <set >
          <if test="userId != null" >
              user_id = #{userId,jdbcType=INTEGER},
          </if>
          <if test="cgjRoleId != null" >
              cgj_role_id = #{cgjRoleId,jdbcType=INTEGER},
          </if>
          <if test="rentalRoleId != null" >
              rental_role_id = #{rentalRoleId,jdbcType=INTEGER},
          </if>
          <if test="ydhcRoleId != null" >
              ydhc_role_id = #{ydhcRoleId,jdbcType=INTEGER},
          </if>
          <if test="createTime != null" >
              create_time = #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="createBy != null" >
              create_by = #{createBy,jdbcType=INTEGER},
          </if>
          <if test="updateTime != null" >
              update_time = #{updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="updateBy != null" >
              update_by = #{updateBy,jdbcType=INTEGER},
          </if>
      </set>
      where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateServiceUserRole" parameterType="com.ydc.model.cgj.ServiceUserRole" >
      update t_cfg_service_user_role
      set user_id = #{userId,jdbcType=INTEGER},
      cgj_role_id = #{cgjRoleId,jdbcType=INTEGER},
      rental_role_id = #{rentalRoleId,jdbcType=INTEGER},
      ydhc_role_id = #{ydhcRoleId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER}
      where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getServiceUserRoleByUserId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_cfg_service_user_role
    where user_id = #{userId,jdbcType=INTEGER}
  </select>

  <update id="updateOrInsert" parameterType="com.ydc.model.cgj.ServiceUserRole" >
      insert into t_cfg_service_user_role (user_id, cgj_role_id, rental_role_id,
      ydhc_role_id, create_time, create_by,
      update_time, update_by)
      values (#{userId,jdbcType=INTEGER}, #{cgjRoleId,jdbcType=INTEGER}, #{rentalRoleId,jdbcType=INTEGER},
      #{ydhcRoleId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER},
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER})
    ON DUPLICATE KEY UPDATE
    cgj_role_id = #{cgjRoleId,jdbcType=INTEGER},
    rental_role_id = #{rentalRoleId,jdbcType=INTEGER},
    ydhc_role_id = #{ydhcRoleId,jdbcType=INTEGER},
    update_by = #{updateBy,jdbcType=INTEGER}
  </update>
</mapper>