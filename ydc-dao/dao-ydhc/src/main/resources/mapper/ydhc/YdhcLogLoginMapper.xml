<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">
<mapper namespace="com.ydc.dao.ydhc.YdhcLogLoginDao">
  <resultMap id="BaseResultMap" type="com.ydc.model.ydhc.YdhcLogLogin">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="ip_address" jdbcType="VARCHAR" property="ipAddress" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, user_name, login_name, login_time, role_name, ip_address
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_ydhc_log_login
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_ydhc_log_login
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ydc.model.ydhc.YdhcLogLogin">
    insert into t_ydhc_log_login (id, user_id, user_name, 
      login_name, login_time, role_name, 
      ip_address)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{loginName,jdbcType=VARCHAR}, #{loginTime,jdbcType=TIMESTAMP}, #{roleName,jdbcType=VARCHAR}, 
      #{ipAddress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ydc.model.ydhc.YdhcLogLogin">
    insert into t_ydhc_log_login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="ipAddress != null">
        ip_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null">
        #{ipAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ydc.model.ydhc.YdhcLogLogin">
    update t_ydhc_log_login
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null">
        ip_address = #{ipAddress,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ydc.model.ydhc.YdhcLogLogin">
    update t_ydhc_log_login
    set user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      role_name = #{roleName,jdbcType=VARCHAR},
      ip_address = #{ipAddress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>